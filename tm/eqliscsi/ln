#!/bin/bash

# -------------------------------------------------------------------------- #
# Copyright 2014, Asociacion Clubs Baloncesto (acb.com)                      #
# Author: Joaquin Villanueva                                                 #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #

# ln fe:SOURCE host:remote_system_ds/disk.i vm_id ds_id
#   - fe is the front-end hostname
#   - SOURCE is the path of the disk image in the form DS_BASE_PATH/disk
#   - host is the target host to deploy the VM
#   - remote_system_ds is the path for the system datastore in the host
#   - vmid is the id of the VM
#   - dsid is the target datastore (0 is the system datastore)

SRC=$1
DST=$2

VMID=$3
DSID=$4

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON

EQL_MAD_DEBUG=1
TM_PATH=$(dirname $0)
source ${TM_PATH}/../../datastore/eqliscsi/eqliscsi.conf
source ${TM_PATH}/../../scripts_eqliscsi.sh

#-------------------------------------------------------------------------------
# Get EQL_HOST from datastore/image
#-------------------------------------------------------------------------------
# Set dst path and dir
DST_PATH=`arg_path $DST`
DST_HOST=`arg_host $DST`
DST_DIR=`dirname $DST_PATH`

# Get disk id from DST path
DISK_ID=$(echo "$DST_PATH" | $AWK -F. '{print $NF}')

# Get datastore/image data from VM disk
XPATH="${TM_PATH}/../../datastore/xpath.rb --stdin"

unset i XPATH_ELEMENTS
while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onevm show -x $VMID| $XPATH \
                    /VM/TEMPLATE/DISK[DISK_ID=$DISK_ID]/DATASTORE_ID)

SRC_DSID="${XPATH_ELEMENTS[0]}"

# Get EQL_HOST from datastore SRC_DSID
unset i XPATH_ELEMENTS
while IFS= read -r -d '' element; do
    XPATH_ELEMENTS[i++]="$element"
done < <(onedatastore show -x $SRC_DSID| $XPATH \
                    /DATASTORE/TEMPLATE/EQL_HOST)

EQL_HOST="${XPATH_ELEMENTS[0]:-$EQL_HOST}"

# Get volume name and device
EQL_VOLUME=$(eql_src_get_volume $SRC)
EQL_DEV="$EQL_BASE_DEVICE/$EQL_VOLUME"

# Construct command to discover target, login and link the device
LINK_CMD=$(cat <<EOF
    set -e
    mkdir -p $DST_DIR
    $SUDO $(eqliscsi_discovery)
    IQN=\$($SUDO $(eqliscsi_get_iqn_from_node "$EQL_VOLUME"))
    $SUDO $(eqliscsi_login "\$IQN")
    RC=\$?
    if [ "\$RC" -ne 0 ]; then
        exit \$RC
    fi
    # poll 10 secs for iSCSI device
    x=0
    while [ "\$x" -lt 10 -a ! -L "$EQL_DEV" ]; do
        x=\$((x+1))
        sleep 1
    done
    if [ -L "$EQL_DEV" ]; then
	ln -sf "$EQL_DEV" "$DST_PATH"
    else
	echo "iSCSI device "$EQL_DEV" not found on time"
	exit 1
    fi
EOF
)

eql_log "$DST_HOST" "$LINK_CMD"
ssh_exec_and_log "$DST_HOST" "$LINK_CMD" "Error linking $DST_HOST:$EQL_DEV"
exit 0
