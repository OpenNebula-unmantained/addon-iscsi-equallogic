#!/bin/sh

# -------------------------------------------------------------------------- #
# Copyright 2014, Asociacion Clubs Baloncesto (acb.com)                      #
# Author: Joaquin Villanueva                                                 #
#                                                                            #
# Portions copyright OpenNebula Project (OpenNebula.org), CG12 Labs          #
#                                                                            #
# Licensed under the Apache License, Version 2.0 (the "License"); you may    #
# not use this file except in compliance with the License. You may obtain    #
# a copy of the License at                                                   #
#                                                                            #
# http://www.apache.org/licenses/LICENSE-2.0                                 #
#                                                                            #
# Unless required by applicable law or agreed to in writing, software        #
# distributed under the License is distributed on an "AS IS" BASIS,          #
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.   #
# See the License for the specific language governing permissions and        #
# limitations under the License.                                             #
#--------------------------------------------------------------------------- #
# POSTMIGRATE SOURCE DST remote_system_dir vmid dsid template
#  - SOURCE is the host where the VM is running
#  - DST is the host where the VM is to be migrated
#  - remote_system_dir is the path for the VM home in the system datastore
#  - vmid is the id of the VM
#  - dsid is the target datastore
#  - template is the template of the VM in XML and base64 encoded

# To access the vm_template you can use the xpath.rb utility. Check the
# datastore drivers for an example.

# -------- Set up the environment to source common tools & conf ------------

if [ -z "${ONE_LOCATION}" ]; then
    TMCOMMON=/var/lib/one/remotes/tm/tm_common.sh
else
    TMCOMMON=$ONE_LOCATION/var/remotes/tm/tm_common.sh
fi

. $TMCOMMON


TM_PATH=$(dirname $0)
source ${TM_PATH}/../../datastore/eqliscsi/eqliscsi.conf
source ${TM_PATH}/../../scripts_eqliscsi.sh

# -------- Get cp and datastore arguments from OpenNebula core ------------

SRC_HOST=$1
DST_HOST=$2
VM_PATH=$3

VMID=$4
DSID=$5

TEMPLATE=$6

PERSISTENT=$7

#-------------------------------------------------------------------------------
# Retrieve volume and IQN from iscsi discovery database if not persistent
# Equallogic generates IQN with random numbers when cloning source image (not stored in VM template)
# If persistent, get them from VM template
#-------------------------------------------------------------------------------
EQL_HOST="$(eql_src_get_host $VM_PATH)"
EQL_VOLUME="$(eql_src_get_volume $VM_PATH)"
EQL_DEV="$EQL_BASE_DEVICE/$EQL_VOLUME"

if [ -z "$PERSISTENT" ]; then
    EQL_VOLUME=$EQL_VOLUME-$VMID
    IQN="$(eqliscsi_get_iqn_client $EQL_VOLUME)"
else
    IQN="$(eql_src_get_iqn $VM_PATH)"
fi

# Construct command to discover target and login
log "Logging in to $IQN in $DST_HOST"

DISCOVER_CMD=$(cat <<EOF
    set -e
    $SUDO $(eqliscsi_discovery)
    $SUDO $(eqliscsi_login "$IQN")
    ERROR=\$?
    if [ "\$ERROR" -ne 0 ]; then
        exit \$ERROR
    fi
    # poll
    while [ ! -L "$EQL_DEV" ]; do
        sleep 1
    done
EOF
)

eql_ssh_exec_and_log "$DST_HOST" "$DISCOVER_CMD" \
        "Error registering $DST_HOST:$IQN" \
        "exit"

exit 0
